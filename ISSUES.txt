== move of the front man ==

0) run now.js based server
1) navigate a browser to http://localhost:12345/webodf/collabtest/test.html  --> user A
2) navigate a browser to http://localhost:12345/webodf/collabtest/test.html  --> user B
3) A) click on "What" in the first heading
4) B) click on "about" in the first heading
5) A) press left-arrow

webodf: 258d829dbed6e8b56149284e201775e8756c5acc
server: f89c0d7b0984bbed964ce9efb73ad9c9e0804f5c
browser: google chrome

fixed in webodf: 7ca5395e077aff27dc82f08faa05a24dc6686719

== cursor-move with company ==

somewhere down in core.Cursor the cursor keeps a reference
of the textnode the cursor is currently in.
i suspect that textnode can get out of sync with reality
(the DOM) if text nodes next to the cursor are split and
joined because of another cursor passing along.

== single offline avatar getting lost ==

webodf: 871aaf5f609281f1bc59ba0ba273d3a0ce4abb
browser: google chrome

0) run ./simplerevisionserver/webdavserver.py
1) load http://localhost:8080/webodf/collabtest/test.html
2) click on first word "WebODF"; press Home-Key
3) press 3x Left-Arrow [Avatar is left of image now]
4) Insert 4x "x"
5) press 3x Right-Arrow

6a) further Right-Arrows will not move the Avatar
6b) further Left-Arrows will make Avatar disappear
	[6b will trigger 'INDEX_SIZE_ERR: DOM Exception 1']

7) Click somewhere and Avatar will re-appear.



== walking over a split text node ==
walking over a split text node lets the avatar disappear.
the textnode split happened when removing an avatar. a fix for
that split is incoming...
but the walking should be more robust and able to cope with such
situations.

additional info:
when the avatar disappears the console outputs a:
Uncaught Error: INDEX_SIZE_ERR: DOM Exception 1 
in Selection.js :81

cloud: e6c7df91fa203ed99094c5ac030d03bd7af4a230
webodf: 6bea12a3dc4f3e5ce407e2ad3d7d16f35df2ec73

